{"version":3,"sources":["TextError.js","Todo.js","TodoList.js","MyForm.js","App.js","index.js"],"names":["TextError","Todo","todo","setTodo","filterTodo","console","log","map","item","Fragment","className","completed","style","padding","paddingLeft","marginBottom","text","onClick","itemId","id","filter","class","TodoList","MyForm","useState","status","setStatus","setFilterTodo","useEffect","localStorage","getItem","setItem","JSON","stringify","localTodo","parse","getLocalTodo","filterHandler","validationSchema","Yup","todoInput","required","display","justifyContent","alignItems","initialValues","todoDivisions","onSubmit","values","onSubmitProps","generateUniqueId","resetForm","type","name","placeholder","size","onChange","e","target","value","App","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAUeA,I,gBCwBAC,MAjCf,YAA0C,IAA3BC,EAA0B,EAA1BA,KAAKC,EAAqB,EAArBA,QAAQC,EAAa,EAAbA,WAgBxB,OAfAC,QAAQC,IAAIJ,GAgBRE,EAAWG,KAAI,SAAAC,GACZ,OACC,cAAC,IAAMC,SAAP,UACA,qBAAIC,UAAS,0BAAqBF,EAAKG,UAAY,YAAc,IAAMC,MAAO,CAACC,QAAQ,EAAEC,YAAY,OAAOC,aAAa,QAAzH,UACKP,EAAKQ,KACN,wBAAQN,UAAU,8BAA8BO,QAAS,kBAnB9CC,EAmBkEV,EAAKW,QAlB1FhB,EAAQD,EAAKkB,QAAO,SAAAZ,GAAI,OAAIA,EAAKW,KAAOD,MADtB,IAACA,GAmBX,SAAuF,mBAAGG,MAAM,mBAChG,wBAAQX,UAAU,gCAAgCO,QAAS,kBAjB9CC,EAiBoEV,EAAKW,QAhB9FhB,EAAQD,EAAKK,KAAI,SAACC,GACd,OAAGA,EAAKW,KAAOD,EACJ,YAAC,eAAIV,GAAZ,IAAkBG,WAAaH,EAAKG,YAG7BH,MANK,IAACU,GAiBb,SAA2F,mBAAGG,MAAM,uBAJnFb,EAAKW,QCJvBG,MAdf,YAA8C,IAA3BpB,EAA0B,EAA1BA,KAAKC,EAAqB,EAArBA,QAAQC,EAAa,EAAbA,WAC5B,OAKgB,aAHR,CAGQ,MAAIM,UAAU,aAAd,SACI,cAAC,EAAD,CAAMR,KAAMA,EAAMC,QAASA,EAASC,WAAaA,O,iBCwG1DmB,MA1Gf,WACI,MAAuBC,mBAAS,IAAhC,mBAAOtB,EAAP,KAAYC,EAAZ,KACA,EAAyBqB,mBAAS,OAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAmCF,mBAAS,IAA5C,mBAAOpB,EAAP,KAAkBuB,EAAlB,KAgCAC,qBAAU,YAVW,WACjB,GAAqC,OAAlCC,aAAaC,QAAQ,SACpBD,aAAaE,QAAQ,QAAQC,KAAKC,UAAU,SAE5C,CACA,IAAIC,EAAYF,KAAKG,MAAMN,aAAaC,QAAQ,UAChDzB,QAAQC,IAAI,QACZH,EAAQ+B,IAIZE,KACF,IACFR,qBAAU,YAjCY,WAClB,OAAOH,GACH,IAAK,UACDpB,QAAQC,IAAImB,GACZE,EAAczB,EAAKkB,QAAQ,SAAAZ,GAAI,OAAuB,IAAnBA,EAAKG,cACxCN,QAAQC,IAAIF,GACZ,MACJ,IAAK,YACDC,QAAQC,IAAImB,GACZE,EAAczB,EAAKkB,QAAO,SAAAZ,GAAI,OAAuB,IAAnBA,EAAKG,cACvCN,QAAQC,IAAIF,GACZ,MACJ,QACIC,QAAQC,IAAImB,GACZE,EAAczB,IAoBtBmC,GAhBAR,aAAaE,QAAQ,QAAQC,KAAKC,UAAU/B,MAkB7C,CAACA,EAAKuB,IACT,IASMa,EAAmBC,IAAW,CAChCC,UAAYD,MAAaE,SAAS,cAYtC,OACI,qBAAK/B,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAME,MAAO,CAAC8B,QAAQ,OAAOC,eAAe,SAASC,WAAW,UAA/E,UACI,qBAAMlC,UAAU,aAChB,sBAAKA,UAAU,qBAAf,UACI,cAAC,IAAD,CAAQmC,cAtBF,CAClBL,UAAY,GACZM,cAAgB,OAoBkCC,SAfrC,SAACC,EAAOC,GACrB5C,QAAQC,IAAI0C,GACZ7C,EAAQ,GAAD,mBACAD,GADA,CAEH,CAACc,KAAOgC,EAAOR,UAAW7B,WAAY,EAAOQ,GAAK+B,UAEtDD,EAAcE,aAS0Db,iBAAoBA,EAAhF,SAEoB,eAAC,IAAD,CAAM5B,UAAU,cAAcE,MAAO,CAACG,aAAa,QAAnD,UACJ,sBAAKL,UAAU,cAAf,UACI,cAAC,IAAD,CAAOA,UAAU,eAAe0C,KAAK,OAAOC,KAAK,YAAYlC,GAAG,YAAYmC,YAAY,aAAaC,KAAK,OAC1G,qBAAM7C,UAAU,qBAAhB,SACI,wBAAQ0C,KAAK,SAAb,SACI,mBAAG1C,UAAU,8BAKzB,qBAAKA,UAAU,kBAAf,SACI,yBAAQA,UAAU,eAAe8C,SAAU,SAACC,GAAD,OAAK/B,EAAU+B,EAAEC,OAAOC,QAAnE,UACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,+BAaxB,cAAC,EAAD,CAAUzD,KAAQA,EAAMC,QAASA,EAASC,WAAaA,OAE3D,qBAAKM,UAAU,mBC/FhBkD,MATf,WACE,OACE,sBAAKlD,UAAU,MAAf,UACC,oBAAIE,MAAO,CAACiD,UAAU,SAAShD,QAAQ,QAAvC,gCACA,cAAC,EAAD,QCDLiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.22ca5d1e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TextError(props) {\r\n    return (\r\n        <div className=\"error\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError\r\n","import React from 'react'\r\nfunction Todo({todo,setTodo,filterTodo}) {\r\n    console.log(todo);\r\n    //return <div></div>\r\n    const deleteHandler = (itemId) => {\r\n        setTodo(todo.filter(item => item.id !== itemId))\r\n    }\r\n    const completeHandler = (itemId) => {\r\n        setTodo(todo.map((item)=> {\r\n            if(item.id === itemId){\r\n                return ({...item, completed : !item.completed})\r\n            }\r\n            else{\r\n                return item\r\n            }\r\n        }))\r\n    }\r\n    return (\r\n        filterTodo.map(item => {\r\n           return(\r\n            <React.Fragment key={item.id} >\r\n            <li className={`list-group-item ${item.completed ? 'completed' : ''}`} style={{padding:0,paddingLeft:\"10px\",marginBottom:\"20px\"}}>\r\n                {item.text}\r\n                <button className=\"btn float-right delete-todo\" onClick={() => deleteHandler(item.id)}><i class=\"fas fa-trash\"></i></button>   \r\n                <button className=\"btn float-right complete-todo\" onClick={() => completeHandler(item.id)}><i class=\"fas fa-check\"></i></button>   \r\n            </li>\r\n            \r\n            \r\n        </React.Fragment>\r\n           )\r\n       })\r\n    )\r\n}\r\n\r\nexport default Todo\r\n\r\n\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nfunction TodoList({todo,setTodo,filterTodo}) {\r\n    return (\r\n        \r\n            // <div className=\"row\">\r\n            //     <div className=\"col-md-2\"></div>\r\n            //     <div className=\"col-sm-2 col-md-6\">\r\n                    <ul className=\"list-group\">\r\n                        <Todo todo={todo} setTodo={setTodo} filterTodo ={filterTodo} />\r\n                    </ul>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n    }\r\nexport default TodoList","import React, { useState, useEffect } from 'react'\r\nimport {Formik,Form,Field,ErrorMessage} from 'formik'\r\nimport TextError from './TextError'\r\nimport * as Yup from 'yup'\r\nimport TodoList from './TodoList'\r\nimport generateUniqueId from 'generate-unique-id'\r\nexport const todoContext = React.createContext();\r\nfunction MyForm() {\r\n    const [todo,setTodo] = useState([]);\r\n    const [status,setStatus]=useState('all')\r\n    const [filterTodo,setFilterTodo] = useState([]);\r\n   \r\n    const filterHandler = () => {\r\n        switch(status){\r\n            case 'pending' :\r\n                console.log(status);\r\n                setFilterTodo(todo.filter( item => item.completed === false));\r\n                console.log(filterTodo);\r\n                break;\r\n            case 'completed' :\r\n                console.log(status);\r\n                setFilterTodo(todo.filter(item => item.completed === true));\r\n                console.log(filterTodo);\r\n                break;\r\n            default:\r\n                console.log(status);\r\n                setFilterTodo(todo);\r\n        }\r\n    }\r\n    const saveLocalTodo = () => {\r\n        localStorage.setItem('todos',JSON.stringify(todo));\r\n    }\r\n    const getLocalTodo = () => {\r\n        if(localStorage.getItem('todos') === null){\r\n            localStorage.setItem('todos',JSON.stringify([]))\r\n        }\r\n        else{\r\n            let localTodo = JSON.parse(localStorage.getItem('todos'));\r\n            console.log(\"HGJF\")\r\n            setTodo(localTodo)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getLocalTodo();\r\n    },[])\r\n    useEffect(() => {\r\n        filterHandler();\r\n        saveLocalTodo();\r\n    }, [todo,status])\r\n    const options = [\r\n        {key:'All',value:'1'},\r\n        {key:'Completed',value: '2'},\r\n        {key:'Pending',value:'3'}\r\n    ]\r\n    const initialValues = {\r\n        todoInput : '',\r\n        todoDivisions : 'All'\r\n    }\r\n    const validationSchema = Yup.object({\r\n        todoInput : Yup.string().required('Required')\r\n    })\r\n    const onSubmit = (values,onSubmitProps) => {\r\n        console.log(values);\r\n        setTodo([\r\n            ...todo,\r\n            {text : values.todoInput, completed : false, id : generateUniqueId()}\r\n        ])\r\n        onSubmitProps.resetForm();\r\n       // console.log(todo);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\" style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <div  className=\"col-md-2\"></div>\r\n                <div className=\"col-md-8 col-sm-12\">\r\n                    <Formik initialValues={initialValues} onSubmit = {onSubmit} validationSchema = {validationSchema} >\r\n                        \r\n                                        <Form className=\"form-inline\" style={{marginBottom:\"50px\"}}>\r\n                                    <div className='input-group'>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"todoInput\" id=\"todoInput\" placeholder=\"Enter Task\" size=\"50\" />\r\n                                        <div  className=\"input-group-append\">\r\n                                            <button type=\"submit\">\r\n                                                <i className=\"fas fa-plus-square\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                        {/* <ErrorMessage name=\"todoInput\" component={TextError} /> */}\r\n                                    </div>\r\n                                    <div className='form-group pl-2'>\r\n                                        <select className=\"form-control\" onChange={(e)=>setStatus(e.target.value)}>\r\n                                            <option value=\"all\">All</option>\r\n                                            <option value=\"completed\">Completed</option>\r\n                                            <option value=\"pending\">Pending</option>\r\n                                        </select>\r\n                                        {/* <Field className='form-control' as=\"select\" name=\"todoDivisions\">\r\n                                        {\r\n                                            options.map(option => {\r\n                                            return <option key={option.value} value={option.value} >{option.key}</option>\r\n                                            })\r\n                                        }\r\n                                        </Field> */}\r\n                                    </div>\r\n                                </Form>\r\n                            \r\n                    </Formik> \r\n                    <TodoList todo = {todo} setTodo={setTodo} filterTodo ={filterTodo} />\r\n                </div>\r\n                <div className=\"col-md-2\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyForm\r\n","import './App.css';\nimport MyForm from './MyForm'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <h1 style={{textAlign:\"center\",padding:\"40px\"}}>Preethi's ToDo App</h1>\n     <MyForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}